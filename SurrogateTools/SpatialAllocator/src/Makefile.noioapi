#CC = cc
# For AIX VisualAge, use line below
CC = c89
# Optional flags - uncomment one OPTFLAGS line
OPTFLAGS = -O

PROJDIR=./PROJ.4
PROJ_H=$(PROJDIR)/projects.h

# Location of I/O API and NetCDF libraries
#IOAPIDIR=/netscr/cseppan/libs/ioapi-3.0/Linux2_x86pg
#NETCDFDIR=/netscr/cseppan/libs/netcdf-3.6.0-p1/lib

# Fortran libraries needed for compiling with the I/O API
#FORTLIBS=-lxlf90 -lxlsmp   # AIX
FORTLIBS=-L/afs/isis/pkg/pgi-52/linux86/5.2/lib -lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl -lpgc  # Linux Portland Group

# Library paths
#LIBPATH=-L. -L$(PROJDIR) -L$(IOAPIDIR) -L$(NETCDFDIR)
# No I/O API support
LIBPATH=-L. -L$(PROJDIR)

#LIBS = $(LIBPATH) -lspatial -lm -lproj -lioapi -lnetcdf $(FORTLIBS)
# No I/O API support
LIBS = $(LIBPATH) -lspatial -lm -lproj

#IOAPIFLAGS=-DFLDMN=1 -DUSE_IOAPI
# No I/O API support
IOAPIFLAGS=

# Use the following lines for Linux
CFLAGS = $(OPTFLAGS) -I$(PROJDIR) $(IOAPIFLAGS)
#-DDEBUG_POST -DSTACK_DEBUG -g 
#-DEVAL_C_MAIN
#-DDEBUG
#-DTEST_POINTR
#-DALLOC_MODE_TEST

# For AIX, replace CFLAGS with the line below
#CFLAGS = $(OPTFLAGS) -I$(PROJDIR) -DAIX -D_ANSI_C_SOURCE $(IOAPIFLAGS)

# Use the following lines for other platforms
#LIBS = $(LIBPATH) -lmalloc -lproj -lm
#CFLAGS = -cckr $(OPTFLAGS) -I$(PROJDIR)


.c.o:
	$(CC) $(CFLAGS) -c $<


L = libspatial.a

ALLOC = mims_spatial.o

SRG = srg_main.o

BELD = beld3smk.o

pfiletest = PointFileReader.o

pgfiletest = PolygonFileReader.o

allocmodetest = parseAllocModes.o

DIFFOBJS = diffsurr.o io.o

DIFFIOAPI = diffioapi.o io.o

DBF2ASC = dbf2asc.o

LIBOBJS= $L(attributes.o) $L(bbox.o) $L(data_weight.o) $L(dbfopen.o) \
        $L(dscgridc.o) $L(fractionalVegReader.o) $L(inpoly.o) \
        $L(intersect.o) $L(io.o) $L(mims_spatl_proj.o) $L(polyops.o) \
        $L(regularGridReader.o) $L(EGridReader.o) $L(testPolyReader.o) \
        $L(segseg.o) $L(shpopen.o) \
        $L(strlistc.o) $L(sumpoly.o) $L(surrogate.o) \
        $L(PolyReader.o) $L(gpc.o) $L(parseWeightAttributes.o) \
        $L(parse_include_exclude.o) $L(regex.o) $L(convert_beld.o) \
        $L(create_subsets.o) $L(eval.o) $L(postfix.o) \
        $L(sastack.o) $L(sdstack.o) $L(allocate.o) $L(overlay.o) \
        $L(BoundingBoxReader.o) $L(variableGridReader.o) \
        $L(PolygonFileReader.o) $L(PointFileReader.o) \
        $L(union.o) $L(parseAllocModes.o) \
        $L(PolyShapeReader.o) $L(PolyMShapeInOne.o) $L(AttachDBFAttribute.o) \
        $L(PolyShapeWrite.o) $L(centroid.o) \
        $L(IoapiInputReader.o) $L(AttachIoapiAttribute.o) $L(allocateIoapi.o)

all: libspatial allocator.exe srgcreate.exe diffsurr.exe beld3smk.exe \
     diffioapi.exe dbf2asc.exe

libspatial: $(LIBOBJS) $L

allocator.exe: $(ALLOC)
	$(CC) -o $@ $(ALLOC) $(LIBS)
	cp $@ ..

srgcreate.exe: $(SRG)
	$(CC) -o $@ $(SRG) $(LIBS)
	cp $@ ..
	
diffsurr.exe: $(DIFFOBJS)
	$(CC) -o $@ $(DIFFOBJS) $(LIBS)
	cp $@ ..

beld3smk.exe: $(BELD)
	$(CC) -o $@ $(BELD) $(LIBS)
	cp $@ ..

diffioapi.exe: $(DIFFIOAPI)
	$(CC) -o $@ $(DIFFIOAPI) $(LIBS)
	cp $@ ..

dbf2asc.exe: $(DBF2ASC)
	$(CC) -o $@ $(DBF2ASC) $(LIBS)
	cp $@ ..

pointfiletest.exe: $(pfiletest)
	$(CC) -o $@ $(pfiletest) $(LIBS)
	cp $@ ..
	
polygonfiletest.exe: $(pgfiletest)
	$(CC) -o $@ $(pgfiletest) $(LIBS)
	cp $@ ..

allocmodetest.exe: $(allocmodetest)
	$(CC) -o $@ $(allocmodetest) $(LIBS)
	cp $@ ..

eval.exe: eval.o postfix.o sdstack.o sastack.o io.o dbfopen.o
	$(CC) -o $@ eval.o postfix.o sdstack.o sastack.o io.o dbfopen.o


clean: 
	rm -f *.o diffsurr.exe ../diffsurr.exe allocator.exe \
../allocator.exe srgcreate.exe ../srgcreate.exe libspatial.a \
beld3smk.exe ../beld3smk.exe diffioapi.exe ../diffioapi.exe

realclean: 
	rm -f *.o *.exe ../*.exe *.a

attributes.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
bbox.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
data_weight.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
dbfopen.o: shapefil.h
dscgridc.o: parms3.h
fractionalVegReader.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
gpc.o: gpc.h
inpoly.o: mims_spatl.h mims_evs.h
intersect.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
mims_spatial.o: libspatial shapefil.h mims_spatl.h mims_evs.h parms3.h
mims_spatl_proj.o: $(PROJ_H) parms3.h
polyops.o: shapefil.h mims_spatl.h parms3.h
regularGridReader.o: shapefil.h mims_spatl.h parms3.h
EGridReader.o: shapefil.h mims_spatl.h parms3.h
shpopen.o: shapefil.h
strlistc.o: mims_spatl.h mims_evs.h
sumpoly.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
testPolyReader.o:
PolyReader.o: mims_spatl.h mims_evs.h io.h
BoundingBoxReader.o: mims_spatl.h mims_evs.h io.h
VariableGridReader.o: mims_spatl.h mims_evs.h
PointFileReader.o: mims_spatl.h mims_evs.h io.h
PolygonFileReader.o: mims_spatl.h mims_evs.h io.h
eval.o: eval.h sdstack.h io.h
sastack.o: sastack.h
sdstack.o: sdstack.h
postfix.o: io.h
parseWeightAttributes.o: parseWeightAttributes.h
parse_include_exclude.o: parseWeightAttributes.h
create_subsets.o: parseWeightAttributes.h io.h
UnitTestMain.o: EvalUnitTest.h
EvalUnitTest.o: EvalUnitTest.h eval.h
regex.o: regex.h
allocate.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
convert_beld.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
surrogate.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
overlay.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
union.o: shapefil.h mims_spatl.h parms3.h
parseAllocModes.o: io.h parseAllocModes.h
PolyShapeWrite.o: shapefil.h mims_spatl.h mims_evs.h parms3.h $(PROJ_H)
AttachDBFAttribute.o: shapefil.h mims_spatl.h mims_evs.h parms3.h $(PROJ_H)
PolyShapeReader.o: shapefil.h mims_spatl.h mims_evs.h parms3.h $(PROJ_H)
PolyMShapeInOne.o: shapefil.h mims_spatl.h mims_evs.h parms3.h $(PROJ_H)
centroid.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
srg_main.o: libspatial
IoapiInputReader.o: shapefil.h mims_spatl.h mims_evs.h iodecl3.h
AttachIoapiAttribute.o: shapefil.h mims_spatl.h mims_evs.h iodecl3.h
allocateIoapi.o: shapefil.h mims_spatl.h mims_evs.h parseAllocModes.h iodecl3.h
beld3smk.o: libspatial io.h iodecl3.h
