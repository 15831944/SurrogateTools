# Makefile.in generated by automake 1.12.3 from Makefile.am.
# hdf/util/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#############################################################################
#############################################################################



am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/hdf
pkgincludedir = $(includedir)/hdf
pkglibdir = $(libdir)/hdf
pkglibexecdir = $(libexecdir)/hdf
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/h4cc.in $(srcdir)/h4fc.in $(srcdir)/h4redeploy.in \
	$(srcdir)/testutil.sh.in $(top_srcdir)/bin/depcomp \
	$(top_srcdir)/bin/mkinstalldirs \
	$(top_srcdir)/config/commence.am \
	$(top_srcdir)/config/conclude.am
bin_PROGRAMS = gif2hdf$(EXEEXT) hdf2gif$(EXEEXT) hdf2jpeg$(EXEEXT) \
	hdf24to8$(EXEEXT) hdf8to24$(EXEEXT) hdfcomp$(EXEEXT) \
	hdfed$(EXEEXT) hdfls$(EXEEXT) hdfpack$(EXEEXT) \
	hdftopal$(EXEEXT) hdftor8$(EXEEXT) hdfunpac$(EXEEXT) \
	jpeg2hdf$(EXEEXT) paltohdf$(EXEEXT) r8tohdf$(EXEEXT) \
	ristosds$(EXEEXT) vmake$(EXEEXT) vshow$(EXEEXT)
TESTS = $(TEST_SCRIPT)
subdir = hdf/util
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/bin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/hdf/src/h4config.h
CONFIG_CLEAN_FILES = h4cc h4fc h4redeploy testutil.sh
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_gif2hdf_OBJECTS = gif2hdf.$(OBJEXT) gif2mem.$(OBJEXT) \
	gifread.$(OBJEXT) decompress.$(OBJEXT) writehdf.$(OBJEXT)
gif2hdf_OBJECTS = $(am_gif2hdf_OBJECTS)
gif2hdf_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(gif2hdf_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdf24to8_OBJECTS = hdf24to8.$(OBJEXT)
hdf24to8_OBJECTS = $(am_hdf24to8_OBJECTS)
hdf24to8_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdf24to8_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdf2gif_OBJECTS = hdf2gif.$(OBJEXT) hdfgifwr.$(OBJEXT)
hdf2gif_OBJECTS = $(am_hdf2gif_OBJECTS)
hdf2gif_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdf2gif_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdf2jpeg_OBJECTS = hdf2jpeg.$(OBJEXT)
hdf2jpeg_OBJECTS = $(am_hdf2jpeg_OBJECTS)
hdf2jpeg_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdf2jpeg_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdf8to24_OBJECTS = hdf8to24.$(OBJEXT)
hdf8to24_OBJECTS = $(am_hdf8to24_OBJECTS)
hdf8to24_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdf8to24_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdfcomp_OBJECTS = hdfcomp.$(OBJEXT)
hdfcomp_OBJECTS = $(am_hdfcomp_OBJECTS)
hdfcomp_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdfcomp_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdfed_OBJECTS = he_cntrl.$(OBJEXT) he_disp.$(OBJEXT) \
	he_file.$(OBJEXT) he_main.$(OBJEXT)
hdfed_OBJECTS = $(am_hdfed_OBJECTS)
hdfed_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdfed_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdfls_OBJECTS = hdfls.$(OBJEXT)
hdfls_OBJECTS = $(am_hdfls_OBJECTS)
hdfls_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdfls_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdfpack_OBJECTS = hdfpack.$(OBJEXT)
hdfpack_OBJECTS = $(am_hdfpack_OBJECTS)
hdfpack_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdfpack_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdftopal_OBJECTS = hdftopal.$(OBJEXT)
hdftopal_OBJECTS = $(am_hdftopal_OBJECTS)
hdftopal_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdftopal_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdftor8_OBJECTS = hdftor8.$(OBJEXT)
hdftor8_OBJECTS = $(am_hdftor8_OBJECTS)
hdftor8_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdftor8_LDFLAGS) \
	$(LDFLAGS) -o $@
am_hdfunpac_OBJECTS = hdfunpac.$(OBJEXT)
hdfunpac_OBJECTS = $(am_hdfunpac_OBJECTS)
hdfunpac_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(hdfunpac_LDFLAGS) \
	$(LDFLAGS) -o $@
am_jpeg2hdf_OBJECTS = jpeg2hdf.$(OBJEXT)
jpeg2hdf_OBJECTS = $(am_jpeg2hdf_OBJECTS)
jpeg2hdf_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(jpeg2hdf_LDFLAGS) \
	$(LDFLAGS) -o $@
am_paltohdf_OBJECTS = paltohdf.$(OBJEXT)
paltohdf_OBJECTS = $(am_paltohdf_OBJECTS)
paltohdf_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(paltohdf_LDFLAGS) \
	$(LDFLAGS) -o $@
am_r8tohdf_OBJECTS = r8tohdf.$(OBJEXT)
r8tohdf_OBJECTS = $(am_r8tohdf_OBJECTS)
r8tohdf_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(r8tohdf_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ristosds_OBJECTS = ristosds.$(OBJEXT)
ristosds_OBJECTS = $(am_ristosds_OBJECTS)
ristosds_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ristosds_LDFLAGS) \
	$(LDFLAGS) -o $@
am_vmake_OBJECTS = vmake.$(OBJEXT)
vmake_OBJECTS = $(am_vmake_OBJECTS)
vmake_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(vmake_LDFLAGS) \
	$(LDFLAGS) -o $@
am_vshow_OBJECTS = vshow.$(OBJEXT)
vshow_OBJECTS = $(am_vshow_OBJECTS)
vshow_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(vshow_LDFLAGS) \
	$(LDFLAGS) -o $@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/hdf/src
depcomp = $(SHELL) $(top_srcdir)/bin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(gif2hdf_SOURCES) $(hdf24to8_SOURCES) $(hdf2gif_SOURCES) \
	$(hdf2jpeg_SOURCES) $(hdf8to24_SOURCES) $(hdfcomp_SOURCES) \
	$(hdfed_SOURCES) $(hdfls_SOURCES) $(hdfpack_SOURCES) \
	$(hdftopal_SOURCES) $(hdftor8_SOURCES) $(hdfunpac_SOURCES) \
	$(jpeg2hdf_SOURCES) $(paltohdf_SOURCES) $(r8tohdf_SOURCES) \
	$(ristosds_SOURCES) $(vmake_SOURCES) $(vshow_SOURCES)
DIST_SOURCES = $(gif2hdf_SOURCES) $(hdf24to8_SOURCES) \
	$(hdf2gif_SOURCES) $(hdf2jpeg_SOURCES) $(hdf8to24_SOURCES) \
	$(hdfcomp_SOURCES) $(hdfed_SOURCES) $(hdfls_SOURCES) \
	$(hdfpack_SOURCES) $(hdftopal_SOURCES) $(hdftor8_SOURCES) \
	$(hdfunpac_SOURCES) $(jpeg2hdf_SOURCES) $(paltohdf_SOURCES) \
	$(r8tohdf_SOURCES) $(ristosds_SOURCES) $(vmake_SOURCES) \
	$(vshow_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = $(am__tty_colors_dummy)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10/bin/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10/bin/missing --run autoconf
AUTOHEADER = ${SHELL} /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10/bin/missing --run autoheader
AUTOMAKE = ${SHELL} /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10/bin/missing --run automake-1.12
AWK = gawk
BUILD_FORTRAN = no
BUILD_NETCDF = no
CC = gcc
CCDEPMODE = depmode=gcc3
CC_VERSION = /usr/bin/gcc ( gcc (GCC) 4.1.2 20080704 )
CFLAGS =  -O3 -fomit-frame-pointer
CONFIG_DATE = Mon May 19 10:31:43 EDT 2014
CONFIG_MODE = production
CONFIG_USER = lran@killdevil-login1.kd.unc.edu
CPP = gcc -E
CPPFLAGS =  -DBIG_LONGS -DSWAP 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -O2 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPRECATED_SYMBOLS = yes
DIFF = diff -w
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = no
F77_VERSION = no ( GNU Fortran (GCC) 4.1.2 20080704 )
FFLAGS =  -O
FGREP = /bin/grep -F
FLIBS = 
GREP = /bin/grep
H4_VERSION = 4.2.10
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LIBOBJS = 
LIBS = -ljpeg -lz  -lm
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LL_PATH = 
LN_S = ln -s
LTLIBOBJS = 
LT_STATIC_EXEC = 
MAINT = #
MAKEINFO = ${SHELL} /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10/bin/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NEQN = neqn
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = hdf
PACKAGE_BUGREPORT = help@hdfgroup.org
PACKAGE_NAME = HDF
PACKAGE_STRING = HDF 4.2.10
PACKAGE_TARNAME = hdf
PACKAGE_URL = 
PACKAGE_VERSION = 4.2.10
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SETX = set -x
SET_MAKE = 
SHARED_EXTENSION = so
SHELL = /bin/sh
STATIC_EXEC = no
STATIC_SHARED = 
STRIP = strip
SZIP_INFO = disabled
TBL = tbl
TEST_FORTRAN_NETCDF = no
UNAME_INFO = Linux killdevil-login1.kd.unc.edu 2.6.18-238.12.1.el5 #1 SMP Sat May 7 20:18:50 EDT 2011 x86_64 x86_64 x86_64 GNU/Linux
USE_COMP_SZIP = no
VERSION = 4.2.10
YACC = bison -y
abs_builddir = /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10/hdf/util
abs_srcdir = /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10/hdf/util
abs_top_builddir = /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10
abs_top_srcdir = /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10
ac_ct_AR = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_shared = no
enable_static = yes
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10/bin/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /nas01/depts/ie/cempd/apps/sallocator/sa_052014/src/libs/hdf-4.2.10/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

# Shell commands used in Makefiles
RM = rm -f
CP = cp

# Libraries to link to while building
LIBHDF = $(top_builddir)/hdf/src/libdf.la
LIBMFHDF = $(top_builddir)/mfhdf/libsrc/libmfhdf.la
H4CC = ${DESTDIR}$(bindir)/h4cc
H4FC = ${DESTDIR}$(bindir)/h4fc
#XDR_ADD = -R$(abs_top_builddir)/mfhdf/xdr/.libs
#AM_LDFLAGS = -R$(abs_top_builddir)/mfhdf/libsrc/.libs -R$(abs_top_builddir)/hdf/src/.libs $(XDR_ADD)
ACLOCAL_AMFLAGS = "-I m4"

# .chkexe files are used to mark tests that have run successfully.
# .chklog files are output from those tests.

#############################################################################
#############################################################################
CHECK_CLEANFILES = *.chkexe *.chklog gif_hdf_temp/bttrfly.hdf \
	gif_hdf_temp/skull.gif gif_hdf_temp/SunWheel.hdf
AM_CPPFLAGS = -I$(top_srcdir)/hdf/src
bin_SCRIPTS = h4redeploy h4cc
#bin_SCRIPTS = h4redeploy h4cc h4fc
gif2hdf_SOURCES = gif2hdf.c gif2mem.c gifread.c decompress.c writehdf.c
gif2hdf_LDADD = $(LIBHDF)
gif2hdf_DEPENDENCIES = $(LIBHDF)
gif2hdf_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdf2gif_SOURCES = hdf2gif.c hdfgifwr.c
hdf2gif_LDADD = $(LIBHDF)
hdf2gif_DEPENDENCIES = $(LIBHDF)
hdf2gif_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdf2jpeg_SOURCES = hdf2jpeg.c
hdf2jpeg_LDADD = $(LIBHDF)
hdf2jpeg_DEPENDENCIES = $(LIBHDF)
hdf2jpeg_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdf24to8_SOURCES = hdf24to8.c
hdf24to8_LDADD = $(LIBHDF)
hdf24to8_DEPENDENCIES = $(LIBHDF)
hdf24to8_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdf8to24_SOURCES = hdf8to24.c
hdf8to24_LDADD = $(LIBHDF)
hdf8to24_DEPENDENCIES = $(LIBHDF)
hdf8to24_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdfcomp_SOURCES = hdfcomp.c
hdfcomp_LDADD = $(LIBHDF)
hdfcomp_DEPENDENCIES = $(LIBHDF)
hdfcomp_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdfed_SOURCES = he_cntrl.c he_disp.c he_file.c he_main.c
hdfed_LDADD = $(LIBHDF)
hdfed_DEPENDENCIES = $(LIBHDF)
hdfed_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdfls_SOURCES = hdfls.c
hdfls_LDADD = $(LIBHDF)
hdfls_DEPENDENCIES = $(LIBHDF)
hdfls_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdfpack_SOURCES = hdfpack.c
hdfpack_LDADD = $(LIBHDF)
hdfpack_DEPENDENCIES = $(LIBHDF)
hdfpack_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdftopal_SOURCES = hdftopal.c
hdftopal_LDADD = $(LIBHDF)
hdftopal_DEPENDENCIES = $(LIBHDF)
hdftopal_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdftor8_SOURCES = hdftor8.c
hdftor8_LDADD = $(LIBHDF)
hdftor8_DEPENDENCIES = $(LIBHDF)
hdftor8_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
hdfunpac_SOURCES = hdfunpac.c
hdfunpac_LDADD = $(LIBHDF)
hdfunpac_DEPENDENCIES = $(LIBHDF)
hdfunpac_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
jpeg2hdf_SOURCES = jpeg2hdf.c
jpeg2hdf_LDADD = $(LIBHDF)
jpeg2hdf_DEPENDENCIES = $(LIBHDF)
jpeg2hdf_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
paltohdf_SOURCES = paltohdf.c
paltohdf_LDADD = $(LIBHDF)
paltohdf_DEPENDENCIES = $(LIBHDF)
paltohdf_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
r8tohdf_SOURCES = r8tohdf.c
r8tohdf_LDADD = $(LIBHDF)
r8tohdf_DEPENDENCIES = $(LIBHDF)
r8tohdf_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
ristosds_SOURCES = ristosds.c
ristosds_LDADD = $(LIBHDF)
ristosds_DEPENDENCIES = $(LIBHDF)
ristosds_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
vmake_SOURCES = vmake.c
vmake_LDADD = $(LIBHDF)
vmake_DEPENDENCIES = $(LIBHDF)
vmake_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)
vshow_SOURCES = vshow.c
vshow_LDADD = ../src/libdf.la
vshow_DEPENDENCIES = ../src/libdf.la
vshow_LDFLAGS = $(LT_STATIC_EXEC) $(AM_LDFLAGS)

#############################################################################
#############################################################################
TEST_SCRIPT = testutil.sh
check_SCRIPTS = testutil.sh
check_PROGRAMS = $(bin_PROGRAMS)
DISTCLEANFILES = 

# Automake needs to be taught how to build lib, progs, and tests targets.
# These will be filled in automatically for the most part (e.g.,
# lib_LIBRARIES are built for lib target), but EXTRA_LIB, EXTRA_PROG
# variables are supplied to allow the user to force targets to
# be built at certain times. 
LIB = $(lib_LIBRARIES) $(lib_LTLIBRARIES) $(noinst_LIBRARIES)                 \
      $(noinst_LTLIBRARIES) $(check_LIBRARIES) $(check_LTLIBRARIES) $(EXTRA_LIB)

PROGS = $(bin_PROGRAMS) $(bin_SCRIPTS) $(noinst_PROGRAMS) $(noinst_SCRIPTS)   \
        $(EXTRA_PROG)

chk_TESTS = $(check_PROGRAMS) $(check_SCRIPTS)
TEST_EXTENSIONS = .sh
SH_LOG_COMPILER = $(SHELL)
AM_SH_LOG_FLAGS = 
TEST_PROG_CHKEXE = $(TEST_PROG:=.chkexe_)
TEST_SCRIPT_CHKSH = $(TEST_SCRIPT:=.chkexe_)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/config/commence.am $(top_srcdir)/config/conclude.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign hdf/util/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign hdf/util/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/config/commence.am $(top_srcdir)/config/conclude.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
h4cc: $(top_builddir)/config.status $(srcdir)/h4cc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
h4fc: $(top_builddir)/config.status $(srcdir)/h4fc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
h4redeploy: $(top_builddir)/config.status $(srcdir)/h4redeploy.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testutil.sh: $(top_builddir)/config.status $(srcdir)/testutil.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
gif2hdf$(EXEEXT): $(gif2hdf_OBJECTS) $(gif2hdf_DEPENDENCIES) $(EXTRA_gif2hdf_DEPENDENCIES) 
	@rm -f gif2hdf$(EXEEXT)
	$(gif2hdf_LINK) $(gif2hdf_OBJECTS) $(gif2hdf_LDADD) $(LIBS)
hdf24to8$(EXEEXT): $(hdf24to8_OBJECTS) $(hdf24to8_DEPENDENCIES) $(EXTRA_hdf24to8_DEPENDENCIES) 
	@rm -f hdf24to8$(EXEEXT)
	$(hdf24to8_LINK) $(hdf24to8_OBJECTS) $(hdf24to8_LDADD) $(LIBS)
hdf2gif$(EXEEXT): $(hdf2gif_OBJECTS) $(hdf2gif_DEPENDENCIES) $(EXTRA_hdf2gif_DEPENDENCIES) 
	@rm -f hdf2gif$(EXEEXT)
	$(hdf2gif_LINK) $(hdf2gif_OBJECTS) $(hdf2gif_LDADD) $(LIBS)
hdf2jpeg$(EXEEXT): $(hdf2jpeg_OBJECTS) $(hdf2jpeg_DEPENDENCIES) $(EXTRA_hdf2jpeg_DEPENDENCIES) 
	@rm -f hdf2jpeg$(EXEEXT)
	$(hdf2jpeg_LINK) $(hdf2jpeg_OBJECTS) $(hdf2jpeg_LDADD) $(LIBS)
hdf8to24$(EXEEXT): $(hdf8to24_OBJECTS) $(hdf8to24_DEPENDENCIES) $(EXTRA_hdf8to24_DEPENDENCIES) 
	@rm -f hdf8to24$(EXEEXT)
	$(hdf8to24_LINK) $(hdf8to24_OBJECTS) $(hdf8to24_LDADD) $(LIBS)
hdfcomp$(EXEEXT): $(hdfcomp_OBJECTS) $(hdfcomp_DEPENDENCIES) $(EXTRA_hdfcomp_DEPENDENCIES) 
	@rm -f hdfcomp$(EXEEXT)
	$(hdfcomp_LINK) $(hdfcomp_OBJECTS) $(hdfcomp_LDADD) $(LIBS)
hdfed$(EXEEXT): $(hdfed_OBJECTS) $(hdfed_DEPENDENCIES) $(EXTRA_hdfed_DEPENDENCIES) 
	@rm -f hdfed$(EXEEXT)
	$(hdfed_LINK) $(hdfed_OBJECTS) $(hdfed_LDADD) $(LIBS)
hdfls$(EXEEXT): $(hdfls_OBJECTS) $(hdfls_DEPENDENCIES) $(EXTRA_hdfls_DEPENDENCIES) 
	@rm -f hdfls$(EXEEXT)
	$(hdfls_LINK) $(hdfls_OBJECTS) $(hdfls_LDADD) $(LIBS)
hdfpack$(EXEEXT): $(hdfpack_OBJECTS) $(hdfpack_DEPENDENCIES) $(EXTRA_hdfpack_DEPENDENCIES) 
	@rm -f hdfpack$(EXEEXT)
	$(hdfpack_LINK) $(hdfpack_OBJECTS) $(hdfpack_LDADD) $(LIBS)
hdftopal$(EXEEXT): $(hdftopal_OBJECTS) $(hdftopal_DEPENDENCIES) $(EXTRA_hdftopal_DEPENDENCIES) 
	@rm -f hdftopal$(EXEEXT)
	$(hdftopal_LINK) $(hdftopal_OBJECTS) $(hdftopal_LDADD) $(LIBS)
hdftor8$(EXEEXT): $(hdftor8_OBJECTS) $(hdftor8_DEPENDENCIES) $(EXTRA_hdftor8_DEPENDENCIES) 
	@rm -f hdftor8$(EXEEXT)
	$(hdftor8_LINK) $(hdftor8_OBJECTS) $(hdftor8_LDADD) $(LIBS)
hdfunpac$(EXEEXT): $(hdfunpac_OBJECTS) $(hdfunpac_DEPENDENCIES) $(EXTRA_hdfunpac_DEPENDENCIES) 
	@rm -f hdfunpac$(EXEEXT)
	$(hdfunpac_LINK) $(hdfunpac_OBJECTS) $(hdfunpac_LDADD) $(LIBS)
jpeg2hdf$(EXEEXT): $(jpeg2hdf_OBJECTS) $(jpeg2hdf_DEPENDENCIES) $(EXTRA_jpeg2hdf_DEPENDENCIES) 
	@rm -f jpeg2hdf$(EXEEXT)
	$(jpeg2hdf_LINK) $(jpeg2hdf_OBJECTS) $(jpeg2hdf_LDADD) $(LIBS)
paltohdf$(EXEEXT): $(paltohdf_OBJECTS) $(paltohdf_DEPENDENCIES) $(EXTRA_paltohdf_DEPENDENCIES) 
	@rm -f paltohdf$(EXEEXT)
	$(paltohdf_LINK) $(paltohdf_OBJECTS) $(paltohdf_LDADD) $(LIBS)
r8tohdf$(EXEEXT): $(r8tohdf_OBJECTS) $(r8tohdf_DEPENDENCIES) $(EXTRA_r8tohdf_DEPENDENCIES) 
	@rm -f r8tohdf$(EXEEXT)
	$(r8tohdf_LINK) $(r8tohdf_OBJECTS) $(r8tohdf_LDADD) $(LIBS)
ristosds$(EXEEXT): $(ristosds_OBJECTS) $(ristosds_DEPENDENCIES) $(EXTRA_ristosds_DEPENDENCIES) 
	@rm -f ristosds$(EXEEXT)
	$(ristosds_LINK) $(ristosds_OBJECTS) $(ristosds_LDADD) $(LIBS)
vmake$(EXEEXT): $(vmake_OBJECTS) $(vmake_DEPENDENCIES) $(EXTRA_vmake_DEPENDENCIES) 
	@rm -f vmake$(EXEEXT)
	$(vmake_LINK) $(vmake_OBJECTS) $(vmake_LDADD) $(LIBS)
vshow$(EXEEXT): $(vshow_OBJECTS) $(vshow_DEPENDENCIES) $(EXTRA_vshow_DEPENDENCIES) 
	@rm -f vshow$(EXEEXT)
	$(vshow_LINK) $(vshow_OBJECTS) $(vshow_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/decompress.Po
include ./$(DEPDIR)/gif2hdf.Po
include ./$(DEPDIR)/gif2mem.Po
include ./$(DEPDIR)/gifread.Po
include ./$(DEPDIR)/hdf24to8.Po
include ./$(DEPDIR)/hdf2gif.Po
include ./$(DEPDIR)/hdf2jpeg.Po
include ./$(DEPDIR)/hdf8to24.Po
include ./$(DEPDIR)/hdfcomp.Po
include ./$(DEPDIR)/hdfgifwr.Po
include ./$(DEPDIR)/hdfls.Po
include ./$(DEPDIR)/hdfpack.Po
include ./$(DEPDIR)/hdftopal.Po
include ./$(DEPDIR)/hdftor8.Po
include ./$(DEPDIR)/hdfunpac.Po
include ./$(DEPDIR)/he_cntrl.Po
include ./$(DEPDIR)/he_disp.Po
include ./$(DEPDIR)/he_file.Po
include ./$(DEPDIR)/he_main.Po
include ./$(DEPDIR)/jpeg2hdf.Po
include ./$(DEPDIR)/paltohdf.Po
include ./$(DEPDIR)/r8tohdf.Po
include ./$(DEPDIR)/ristosds.Po
include ./$(DEPDIR)/vmake.Po
include ./$(DEPDIR)/vshow.Po
include ./$(DEPDIR)/writehdf.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) all-local
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-local

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-TESTS check-am \
	clean clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool cscopelist ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-local \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-local pdf \
	pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS


# Automake's distclean won't remove directories, so we can add an additional
# hook target which will do so during 'make distclean'.
distclean-local:
	-rm -rf gif_hdf_temp

# lib/progs/tests targets recurse into subdirectories. build-* targets
# build files in this directory.
build-lib: $(LIB)
build-progs: $(LIB) $(PROGS)
build-tests: $(LIB) $(PROGS) $(chk_TESTS)

# General rule for recursive building targets.
# BUILT_SOURCES contain targets that need to be built before anything else
# in the directory (e.g., for Fortran type detection)
lib progs tests check-s :: $(BUILT_SOURCES)
	@$(MAKE) $(AM_MAKEFLAGS) build-$@ || exit 1;
	@for d in X $(SUBDIRS); do                                             \
	    if test $$d != X && test $$d != .; then                           \
	        (set -x; cd $$d && $(MAKE) $(AM_MAKEFLAGS) $@) || exit 1;     \
	    fi;                                                               \
	done

# General rule for recursive cleaning targets.  Like the rule above,
# but doesn't require building BUILT_SOURCES.
check-clean ::
	@$(MAKE) $(AM_MAKEFLAGS) build-$@ || exit 1;
	@for d in X $(SUBDIRS); do                                             \
	    if test $$d != X && test $$d != .; then                           \
	        (set -x; cd $$d && $(MAKE) $(AM_MAKEFLAGS) $@) || exit 1;     \
	    fi;                                                               \
	done

# Tell Automake to build tests when the user types `make all' (this is
# not its default behavior).  Also build EXTRA_LIB and EXTRA_PROG since
# Automake won't build them automatically, either.
all-local: $(EXTRA_LIB) $(EXTRA_PROG) $(chk_TESTS)

# make install-doc doesn't do anything outside of doc directory, but
# Makefiles should recognize it.
# UPDATE: docs no longer reside in this build tree, so this target
# is depreciated.
install-doc uninstall-doc:
	@echo "Nothing to be done."

# clean up files generated by tests so they can be re-run.
build-check-clean:
	$(RM) -rf $(CHECK_CLEANFILES)

# run check-clean whenever mostlyclean is run
mostlyclean-local: build-check-clean

# check-install is just a synonym for installcheck
check-install: installcheck

# Run each test in order, passing $(TEST_FLAGS) to the program.
# Since tests are done in a shell loop, "make -i" does apply inside it.
#
# Note that targets in chk_TESTS (defined above) will be built when the user
# types 'make tests' or 'make check', but only programs in TEST_PROG,
# or TEST_SCRIPT will actually be executed.
check-TESTS: test

test _test:
	@$(MAKE) build-check-s

# Actual execution of check-s.
build-check-s: $(LIB) $(PROGS) $(chk_TESTS)
	@if test -n "$(TEST_PROG)$(TEST_SCRIPT)"; then      \
	   echo "===Serial tests in `echo ${PWD} | sed -e s:.*/::` begin `date`==="; \
	fi
	@$(MAKE) $(AM_MAKEFLAGS) _exec_check-s
	@if test -n "$(TEST_PROG)$(TEST_SCRIPT)"; then      \
	    echo "===Serial tests in `echo ${PWD} | sed -e s:.*/::` ended `date`===";\
	fi

_exec_check-s: $(TEST_PROG_CHKEXE) $(TEST_SCRIPT_CHKSH)

# The dummy.chkexe here prevents the target from being
# empty if there are no tests in the current directory.
# $${log} is the log file.
# $${tname} is the name of test.
$(TEST_PROG_CHKEXE) dummy.chkexe_:
	@if test "X$@" != "X.chkexe_" && test "X$@" != "Xdummy.chkexe_"; then \
	   tname=$(@:.chkexe_=)$(EXEEXT);\
	   log=$(@:.chkexe_=.chklog); \
	   echo ""; \
	   echo "============================"; \
	   if $(top_srcdir)/bin/newer $(@:.chkexe_=.chkexe) $${tname}; then \
	      echo "No need to test $${tname} again."; \
	   else \
	      echo "----------------------------" > $${log}; \
	      if test "X$(FORTRAN_API)" = "Xyes"; then \
	         echo "Fortran API: Testing $${tname} $(TEST_FLAGS)"; \
	         echo "Fortran API: $${tname} $(TEST_FLAGS) Test Log" >> $${log}; \
	      else \
	         echo "Testing $${tname} $(TEST_FLAGS)"; \
	         echo "$${tname} $(TEST_FLAGS) Test Log" >> $${log}; \
	      fi; \
	      echo "----------------------------" >> $${log}; \
	      srcdir="$(srcdir)" \
		 $(TIME) ./$${tname} $(TEST_FLAGS) >> $${log} 2>&1 \
		 && touch $(@:.chkexe_=.chkexe) || \
		 (cat $${log} && false) || exit 1; \
	      echo "----------------------------" >> $${log}; \
	      echo "Finished testing $${tname} $(TEST_FLAGS)" >> $${log}; \
	      cat $${log}; \
	   fi; \
	fi

# The dummysh.chkexe here prevents the target from being
# empty if there are no tests in the current directory.
# $${log} is the log file.
# $${tname} is the name of test.
$(TEST_SCRIPT_CHKSH) dummysh.chkexe_:
	@if test "X$@" != "X.chkexe_" && test "X$@" != "Xdummysh.chkexe_"; then \
	   cmd=$(@:.chkexe_=);\
	   tname=`basename $$cmd`;\
	   chkname=`basename $(@:.chkexe_=.chkexe)`;\
	   log=`basename $(@:.chkexe_=.chklog)`; \
	   echo "============================"; \
	   if $(top_srcdir)/bin/newer $${chkname} $$cmd $(SCRIPT_DEPEND); then \
	      echo "No need to test $${tname} again."; \
	   else \
	      echo "============================" > $${log}; \
	      if test "X$(FORTRAN_API)" = "Xyes"; then \
	         echo "Fortran API: Testing $${tname} $(TEST_FLAGS)"; \
	         echo "Fortran API: $${tname} $(TEST_FLAGS) Test Log" >> $${log}; \
	      else \
	         echo "Testing $${tname} $(TEST_FLAGS)"; \
	         echo "$${tname} $(TEST_FLAGS) Test Log" >> $${log}; \
	      fi; \
	      echo "============================" >> $${log}; \
	      srcdir="$(srcdir)" \
	         $(TIME) $(SHELL) $$cmd $(TEST_FLAGS) >> $${log} 2>&1 \
	         && touch $${chkname} || \
	         (cat $${log} && false) || exit 1; \
	      echo "" >> $${log}; \
	      echo "Finished testing $${tname} $(TEST_FLAGS)" >> $${log}; \
	      echo "============================" >> $${log}; \
	      echo "Finished testing $${tname} $(TEST_FLAGS)"; \
	      cat $${log}; \
	   fi; \
	   echo "============================"; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
