CC = /nas02/apps/pgi-13.2/linux86/13.2/bin/pgcc  
# Optional flags - uncomment one OPTFLAGS line
OPTFLAGS = -O -m32

#set PROJ4.6 libary and share data directories
#PROJDIR=/nas01/depts/ie/cempd/SMOKE/dyang/sa/src/vector32/libs/proj-4.6.0/local
PROJDIR=/nas01/depts/ie/cempd/SMOKE/dyang/sa/sa36/sa_03_2009/src/libs/proj-4.6.0/local
PROJ_LIBRARY = ${PROJDIR}/lib
PROJ_INCLUDE = ${PROJDIR}/include

# Location of I/O API and NetCDF libraries compiled using pgcc
#IOAPIDIR =  /nas01/depts/ie/cempd/apps/ioapi_30/Linux2_x86pg_pgcc_nomp
#IOAPIDIR =  /nas01/depts/ie/cempd/apps/ioapi_30/20090430/Linux2_x86pg_pgcc_nomp_901_mxvars_500
IOAPIDIR =  /nas02/home/d/y/dyang/ioapi/Linux2_x86pg_pgcc_nomp

#Unidata netcdf c, c++ package compiled using pgcc
NETCDFDIR = /nas01/depts/ie/cempd/apps/netcdf/netcdf-3.6.0-p1/lib
#NETCDFDIR = /nas01/depts/ie/cempd/apps/netcdf/netcdf-3.6.3/Linux86-pgf90-pgcc_901/lib
NETCDFDIR = /nas01/depts/ie/cempd/SMOKE/dyang/sa/sa36/sa_03_2009/src/libs/netcdf-4.0/local/lib

# Fortran libraries needed for compiling with the I/O API
#FORTLIBS=-lxlf90 -lxlsmp   # AIX
#FORTLIBS=-L/afs/isis/pkg/pgi-716/linux86-64/7.1/lib -lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl -lpgc  -lm # Linux Portland Group
#FORTLIBS=-L/nas02/apps/pgi-13.2/linux86-64/13.2/lib -lpgsse1 -lpgsse2 -lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl -lpgc -lm -lrt -lpthread -nomp -mp=nonuma # Linux Portland Group
FORTLIBS=-L/nas02/apps/pgi-13.2/linux86/13.2/lib -lpgsse1 -lpgsse2 -lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl -lpgc -lm -lrt -lpthread -lc -nomp   # Linux Portland Group

# Library paths
LIBPATH=-L. -L$(PROJ_LIBRARY) -L$(IOAPIDIR) -L$(NETCDFDIR)
# No I/O API support
#LIBPATH=-L. -L$(PROJ_LIBRARY)

LIBS = -Bstatic $(LIBPATH) -lspatial -lm -lproj -lioapi -lnetcdf $(FORTLIBS)
# No I/O API support
#LIBS = $(LIBPATH) -lspatial -lm -lproj -static

IOAPIFLAGS=-DFLDMN=1 -DUSE_IOAPI
# No I/O API support
#IOAPIFLAGS=

# Use the following lines for Linux
CFLAGS = -g  $(OPTFLAGS) -I$(PROJ_INCLUDE) $(IOAPIFLAGS) -pgf90libs
#-DDEBUG_POST -DSTACK_DEBUG 
#-DEVAL_C_MAIN
#-DDEBUG
#-DTEST_POINTR
#-DALLOC_MODE_TEST

# For AIX, replace CFLAGS with the line below
#CFLAGS = $(OPTFLAGS) -I$(PROJ_LIBRARY) -DAIX -D_ANSI_C_SOURCE $(IOAPIFLAGS)

# Use the following lines for other platforms
#LIBS = $(LIBPATH) -lmalloc -lproj -lm
#CFLAGS = -cckr $(OPTFLAGS) -I$(PROJ_LIBRARY)


.c.o:
	$(CC) $(CFLAGS) -c $<


L = libspatial.a

ALLOC = mims_spatial.o

SRG = srg_main.o

BELD = beld3smk.o

pfiletest = PointFileReader.o

pgfiletest = PolygonFileReader.o

allocmodetest = parseAllocModes.o

DIFFOBJS = diffsurr.o io.o

DIFFIOAPI = diffioapi.o io.o

DBF2ASC = dbf2asc.o

LIBOBJS= $L(attributes.o) $L(bbox.o) $L(data_weight.o) $L(dbfopen.o) \
        $L(dscgridc.o) $L(fractionalVegReader.o) $L(inpoly.o) \
        $L(intersect.o) $L(io.o) $L(mims_spatl_proj.o) $L(polyops.o) \
        $L(regularGridReader.o) $L(EGridReader.o) $L(testPolyReader.o) \
        $L(segseg.o) $L(shpopen.o) \
        $L(strlistc.o) $L(sumpoly.o) $L(surrogate.o) \
        $L(PolyReader.o) $L(gpc.o) $L(parseWeightAttributes.o) \
        $L(parse_include_exclude.o) $L(regex.o) $L(convert_beld.o) \
        $L(create_subsets.o) $L(eval.o) $L(postfix.o) \
        $L(sastack.o) $L(sdstack.o) $L(allocate.o) $L(overlay.o) \
        $L(BoundingBoxReader.o) $L(variableGridReader.o) \
        $L(PolygonFileReader.o) $L(PointFileReader.o) \
        $L(union.o) $L(parseAllocModes.o) \
        $L(PolyShapeReader.o)  $L(PolyMShapeInOne.o) $L(AttachDBFAttribute.o) \
        $L(PolyShapeWrite.o) $L(centroid.o) \
        $L(IoapiInputReader.o) $L(AttachIoapiAttribute.o) $L(allocateIoapi.o)

all: libspatial allocator.exe srgcreate.exe diffsurr.exe beld3smk.exe \
     diffioapi.exe dbf2asc.exe

libspatial: $(LIBOBJS) $L

allocator.exe: $(ALLOC)
	$(CC) -o $@ $(ALLOC) $(LIBS)

srgcreate.exe: $(SRG)
	$(CC) -o $@ $(SRG) $(LIBS)
	
diffsurr.exe: $(DIFFOBJS)
	$(CC) -o $@ $(DIFFOBJS) $(LIBS)

beld3smk.exe: $(BELD)
	$(CC) -o $@ $(BELD) $(LIBS)

diffioapi.exe: $(DIFFIOAPI)
	$(CC) -o $@ $(DIFFIOAPI) $(LIBS)

dbf2asc.exe: $(DBF2ASC)
	$(CC) -o $@ $(DBF2ASC) $(LIBS)

pointfiletest.exe: $(pfiletest)
	$(CC) -o $@ $(pfiletest) $(LIBS)
	
polygonfiletest.exe: $(pgfiletest)
	$(CC) -o $@ $(pgfiletest) $(LIBS)

allocmodetest.exe: $(allocmodetest)
	$(CC) -o -$@ $(allocmodetest) $(LIBS)

eval.exe: eval.o postfix.o sdstack.o sastack.o io.o dbfopen.o
	$(CC) -o $@ eval.o postfix.o sdstack.o sastack.o io.o dbfopen.o

install:
	if test ! -d ../bin; then mkdir ../bin; fi
	cp -f *.exe ../bin


clean: 
	rm -f *.o diffsurr.exe ../diffsurr.exe allocator.exe \
../allocator.exe srgcreate.exe ../srgcreate.exe libspatial.a \
beld3smk.exe ../beld3smk.exe diffioapi.exe ../diffioapi.exe \
dbf2asc.exe ../dbf2asc.exe

realclean: 
	rm -f *.o *.exe ../*.exe *.a

attributes.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
bbox.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
data_weight.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
dbfopen.o: shapefil.h
dscgridc.o: parms3.h
fractionalVegReader.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
gpc.o: gpc.h
inpoly.o: mims_spatl.h mims_evs.h
intersect.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
mims_spatial.o: libspatial shapefil.h mims_spatl.h mims_evs.h parms3.h
mims_spatl_proj.o: parms3.h
polyops.o: shapefil.h mims_spatl.h parms3.h
regularGridReader.o: shapefil.h mims_spatl.h parms3.h
EGridReader.o: shapefil.h mims_spatl.h parms3.h
shpopen.o: shapefil.h
strlistc.o: mims_spatl.h mims_evs.h
sumpoly.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
testPolyReader.o:
PolyReader.o: mims_spatl.h mims_evs.h io.h
BoundingBoxReader.o: mims_spatl.h mims_evs.h io.h
VariableGridReader.o: mims_spatl.h mims_evs.h
PointFileReader.o: mims_spatl.h mims_evs.h io.h
PolygonFileReader.o: mims_spatl.h mims_evs.h io.h
eval.o: eval.h sdstack.h io.h
sastack.o: sastack.h
sdstack.o: sdstack.h
postfix.o: io.h
parseWeightAttributes.o: parseWeightAttributes.h
parse_include_exclude.o: parseWeightAttributes.h
create_subsets.o: parseWeightAttributes.h io.h
UnitTestMain.o: EvalUnitTest.h
EvalUnitTest.o: EvalUnitTest.h eval.h
regex.o: regex.h
allocate.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
convert_beld.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
surrogate.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
overlay.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
union.o: shapefil.h mims_spatl.h parms3.h
parseAllocModes.o: io.h parseAllocModes.h
PolyShapeWrite.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
AttachDBFAttribute.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
PolyShapeReader.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
PolyMShapeInOne.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
centroid.o: shapefil.h mims_spatl.h mims_evs.h parms3.h
srg_main.o: libspatial
IoapiInputReader.o: shapefil.h mims_spatl.h mims_evs.h iodecl3.h
AttachIoapiAttribute.o: shapefil.h mims_spatl.h mims_evs.h iodecl3.h
allocateIoapi.o: shapefil.h mims_spatl.h mims_evs.h parseAllocModes.h iodecl3.h
beld3smk.o: libspatial io.h iodecl3.h
